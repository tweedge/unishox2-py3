name: ci

# secret use is OK per https://github.community/t/how-secure-are-secrets/139115
on: [push, pull_request]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest hypothesis
      - name: Build unishox2
        run: |
          pip install .
      - name: Extended test with pytest
        run: |
          pytest --hypothesis-profile ci

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Lint with black
        run: |
          black --check --diff .
      - name: Install flawfinder
        run: |
          sudo apt install flawfinder
      - name: Lint with flawfinder
        run: |
          flawfinder unishox2_module.c

  codespell:
    name: codespell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: codespell-project/actions-codespell@master
        with:
          check_filenames: true
          skip: ./.git,./demo.py,./tests.py

  cibuildwheel:
    needs: pytest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          # need to research Windows ARM
          CIBW_ARCHS_WINDOWS: auto
          CIBW_ARCHS_MACOS: all
          CIBW_ARCHS_LINUX: all
          CIBW_TEST_COMMAND: pytest {package}
          CIBW_TEST_REQUIRES: pytest hypothesis
      - name: Upload wheels
        run: |
          pip install twine
          twine upload wheelhouse/* --skip-existing
